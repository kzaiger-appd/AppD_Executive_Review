{"ast":null,"code":"import { noop } from '../utils/noop.js';\nimport { useRef, useEffect } from 'react';\n\n/**\r\n * useDocumentTitle\r\n * @description A hook to easily update document title with React\r\n */\n/**\r\n * useDocumentTitle hook\r\n *\r\n * This hook allows you to set the document title.\r\n *\r\n * @param title - The new title for the document\r\n * @param options - An optional object with a `resetOnUnmount` property to control whether the document title should be reset to its previous value when the component is unmounted. Defaults to false.\r\n *\r\n * @example\r\n * function App() {\r\n *   useDocumentTitle(\"My App\", { resetOnUnmount: true });\r\n *   return <div>Hello, world!</div>;\r\n * }\r\n * @see {@link https://rooks.vercel.app/docs/useDocumentTitle}\r\n */\nfunction useDocumentTitle(title) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const isBrowser = typeof window !== \"undefined\";\n  const prevTitleRef = useRef(isBrowser ? document.title : \"\");\n  const {\n    resetOnUnmount = false\n  } = options;\n  useEffect(() => {\n    if (isBrowser) {\n      document.title = title;\n      const lastTitle = prevTitleRef.current;\n      if (resetOnUnmount) {\n        return () => {\n          document.title = lastTitle;\n        };\n      }\n    }\n    return noop;\n  }, [title, isBrowser, resetOnUnmount]);\n}\nexport { useDocumentTitle };","map":{"version":3,"names":["noop","useRef","useEffect","useDocumentTitle","title","options","arguments","length","undefined","isBrowser","window","prevTitleRef","document","resetOnUnmount","lastTitle","current"],"sources":["/Users/benjin8or/Cisco Project/cisco-project/node_modules/rooks/dist/esm/hooks/useDocumentTitle.js"],"sourcesContent":["import { noop } from '../utils/noop.js';\nimport { useRef, useEffect } from 'react';\n\n/**\r\n * useDocumentTitle\r\n * @description A hook to easily update document title with React\r\n */\r\n/**\r\n * useDocumentTitle hook\r\n *\r\n * This hook allows you to set the document title.\r\n *\r\n * @param title - The new title for the document\r\n * @param options - An optional object with a `resetOnUnmount` property to control whether the document title should be reset to its previous value when the component is unmounted. Defaults to false.\r\n *\r\n * @example\r\n * function App() {\r\n *   useDocumentTitle(\"My App\", { resetOnUnmount: true });\r\n *   return <div>Hello, world!</div>;\r\n * }\r\n * @see {@link https://rooks.vercel.app/docs/useDocumentTitle}\r\n */\r\nfunction useDocumentTitle(title, options = {}) {\r\n    const isBrowser = typeof window !== \"undefined\";\r\n    const prevTitleRef = useRef(isBrowser ? document.title : \"\");\r\n    const { resetOnUnmount = false } = options;\r\n    useEffect(() => {\r\n        if (isBrowser) {\r\n            document.title = title;\r\n            const lastTitle = prevTitleRef.current;\r\n            if (resetOnUnmount) {\r\n                return () => {\r\n                    document.title = lastTitle;\r\n                };\r\n            }\r\n        }\r\n        return noop;\r\n    }, [title, isBrowser, resetOnUnmount]);\r\n}\n\nexport { useDocumentTitle };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzC,MAAMG,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW;EAC/C,MAAMC,YAAY,GAAGV,MAAM,CAACQ,SAAS,GAAGG,QAAQ,CAACR,KAAK,GAAG,EAAE,CAAC;EAC5D,MAAM;IAAES,cAAc,GAAG;EAAM,CAAC,GAAGR,OAAO;EAC1CH,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,EAAE;MACXG,QAAQ,CAACR,KAAK,GAAGA,KAAK;MACtB,MAAMU,SAAS,GAAGH,YAAY,CAACI,OAAO;MACtC,IAAIF,cAAc,EAAE;QAChB,OAAO,MAAM;UACTD,QAAQ,CAACR,KAAK,GAAGU,SAAS;QAC9B,CAAC;MACL;IACJ;IACA,OAAOd,IAAI;EACf,CAAC,EAAE,CAACI,KAAK,EAAEK,SAAS,EAAEI,cAAc,CAAC,CAAC;AAC1C;AAEA,SAASV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useState, useCallback } from 'react';\n\n/**\r\n * useUndoRedoState\r\n * @description Setstate but can also undo and redo\r\n * @see {@link https://rooks.vercel.app/docs/useUndoRedoState}\r\n */\nfunction isFunctionInitializer(functionToCheck) {\n  return typeof functionToCheck === \"function\";\n}\n/**\r\n * useUndoRedoState hook\r\n *\r\n * This hook manages the state with undo and redo capabilities.\r\n *\r\n * @param initialState - The initial state value\r\n * @param options - An optional object with a `maxDepth` property to limit the history and future arrays\r\n * @returns A tuple with the current state, a function to update the state, and an object with undo and redo controls\r\n *\r\n * @example\r\n * const [state, setState, controls] = useUndoRedoState(0, { maxDepth: 3 });\r\n * // state is 0\r\n * setState(1); // state is 1\r\n * controls.undo(); // state is 0\r\n * controls.redo(); // state is 1\r\n */\nfunction useUndoRedoState(initialState, options) {\n  var _a;\n  const [state, _setState] = useState(initialState);\n  const [past, setPast] = useState([]);\n  const [future, setFuture] = useState([]);\n  const maxDepth = (_a = options === null || options === void 0 ? void 0 : options.maxDepth) !== null && _a !== void 0 ? _a : 100;\n  const undo = useCallback(() => {\n    setPast(pastStates => {\n      const newPast = [...pastStates];\n      const previousState = newPast.pop();\n      if (typeof previousState !== \"undefined\") {\n        setFuture(futureStates => [state, ...futureStates]);\n        _setState(previousState);\n      }\n      return newPast;\n    });\n  }, [state]);\n  const redo = useCallback(() => {\n    setFuture(futureStates => {\n      const newFuture = [...futureStates];\n      const nextState = newFuture.shift();\n      if (typeof nextState !== \"undefined\") {\n        setPast(pastStates => [...pastStates, state]);\n        _setState(nextState);\n      }\n      return newFuture;\n    });\n  }, [state]);\n  const canUndo = useCallback(() => past.length > 0, [past]);\n  const canRedo = useCallback(() => future.length > 0, [future]);\n  const setState = useCallback(value => {\n    const nextState = isFunctionInitializer(value) ? value(state) : value;\n    setPast(pastStates => {\n      const newPast = [...pastStates, state];\n      if (newPast.length > maxDepth) {\n        newPast.shift();\n      }\n      return newPast;\n    });\n    setFuture([]);\n    _setState(nextState);\n  }, [state, maxDepth]);\n  const controls = {\n    undo,\n    redo,\n    canUndo,\n    canRedo\n  };\n  return [state, setState, controls];\n}\nexport { useUndoRedoState };","map":{"version":3,"names":["useState","useCallback","isFunctionInitializer","functionToCheck","useUndoRedoState","initialState","options","_a","state","_setState","past","setPast","future","setFuture","maxDepth","undo","pastStates","newPast","previousState","pop","futureStates","redo","newFuture","nextState","shift","canUndo","length","canRedo","setState","value","controls"],"sources":["/Users/benjin8or/Cisco Project/cisco-project/node_modules/rooks/dist/esm/hooks/useUndoRedoState.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n/**\r\n * useUndoRedoState\r\n * @description Setstate but can also undo and redo\r\n * @see {@link https://rooks.vercel.app/docs/useUndoRedoState}\r\n */\r\nfunction isFunctionInitializer(functionToCheck) {\r\n    return typeof functionToCheck === \"function\";\r\n}\r\n/**\r\n * useUndoRedoState hook\r\n *\r\n * This hook manages the state with undo and redo capabilities.\r\n *\r\n * @param initialState - The initial state value\r\n * @param options - An optional object with a `maxDepth` property to limit the history and future arrays\r\n * @returns A tuple with the current state, a function to update the state, and an object with undo and redo controls\r\n *\r\n * @example\r\n * const [state, setState, controls] = useUndoRedoState(0, { maxDepth: 3 });\r\n * // state is 0\r\n * setState(1); // state is 1\r\n * controls.undo(); // state is 0\r\n * controls.redo(); // state is 1\r\n */\r\nfunction useUndoRedoState(initialState, options) {\r\n    var _a;\r\n    const [state, _setState] = useState(initialState);\r\n    const [past, setPast] = useState([]);\r\n    const [future, setFuture] = useState([]);\r\n    const maxDepth = (_a = options === null || options === void 0 ? void 0 : options.maxDepth) !== null && _a !== void 0 ? _a : 100;\r\n    const undo = useCallback(() => {\r\n        setPast((pastStates) => {\r\n            const newPast = [...pastStates];\r\n            const previousState = newPast.pop();\r\n            if (typeof previousState !== \"undefined\") {\r\n                setFuture((futureStates) => [state, ...futureStates]);\r\n                _setState(previousState);\r\n            }\r\n            return newPast;\r\n        });\r\n    }, [state]);\r\n    const redo = useCallback(() => {\r\n        setFuture((futureStates) => {\r\n            const newFuture = [...futureStates];\r\n            const nextState = newFuture.shift();\r\n            if (typeof nextState !== \"undefined\") {\r\n                setPast((pastStates) => [...pastStates, state]);\r\n                _setState(nextState);\r\n            }\r\n            return newFuture;\r\n        });\r\n    }, [state]);\r\n    const canUndo = useCallback(() => past.length > 0, [past]);\r\n    const canRedo = useCallback(() => future.length > 0, [future]);\r\n    const setState = useCallback((value) => {\r\n        const nextState = isFunctionInitializer(value) ? value(state) : value;\r\n        setPast((pastStates) => {\r\n            const newPast = [...pastStates, state];\r\n            if (newPast.length > maxDepth) {\r\n                newPast.shift();\r\n            }\r\n            return newPast;\r\n        });\r\n        setFuture([]);\r\n        _setState(nextState);\r\n    }, [state, maxDepth]);\r\n    const controls = {\r\n        undo,\r\n        redo,\r\n        canUndo,\r\n        canRedo,\r\n    };\r\n    return [state, setState, controls];\r\n}\n\nexport { useUndoRedoState };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}